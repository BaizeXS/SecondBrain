/* src/components/layout/MainLayout.module.css */
.mainLayout {
  display: flex;
  flex-direction: column;
  height: 100vh;
  overflow: hidden; /* 防止整个页面出现不必要的滚动条 */
}

.contentArea {
  display: flex; /* LeftSidebar 和 mainContent 横向排列 */
  flex-grow: 1;  /* 占据 Header 下方的所有剩余垂直空间 */
  overflow: hidden; /* 防止 LeftSidebar 或 mainContent 溢出导致滚动条 */
  position: relative; /* 如果 RightSidebar 是 absolute/fixed 相对于它 */
}

.mainContent {
  flex-grow: 1; /* 占据 .contentArea 中除了 LeftSidebar 之外的所有空间 */
  /* overflow-y: auto; */ /* 不要在这里设置 overflow，让 HomePage 自己管理内部滚动 */
  overflow: hidden; /* 防止 HomePage 内容溢出 MainContent */
  transition: margin-left 0.25s ease-in-out, margin-right 0.25s ease-in-out;
  padding: 0; /* HomePage 自己将负责其内部的 padding */
  box-sizing: border-box;
  position: relative; /* 为了 HomePage 内部绝对定位的元素 */
  display: flex; /* !!! 新增：使 HomePage (作为子元素) 能够更好地撑满并使用 flex 属性 !!! */
  flex-direction: column; /* !!! 新增：如果 HomePage 根元素也希望是 flex 容器 */

  /* 默认边距，基于侧边栏收起状态的宽度 */
  /*margin-left: var(--left-sidebar-width-collapsed);*/
  margin-right: var(--right-sidebar-width-collapsed); /* 为右侧拉手留空间 */
}


.mainContent.rightSidebarOpen {
  /* 当右侧栏完全展开时，它的 margin 是针对展开的宽度 */
  /* 并且因为 RightSidebar 是 fixed 定位，这个 margin-right 主要是为了视觉上不重叠 */
  margin-right: var(--right-sidebar-width-open);
}