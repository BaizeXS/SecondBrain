[project]
name = "secondbrain-backend"
version = "0.1.0"
description = "Second Brain - AI-powered knowledge management system backend"
readme = "README.md"
requires-python = ">=3.12"
authors = [{ name = "Tristan Xu", email = "baizexs@gmail.com" }]
license = { text = "MIT" }
keywords = ["second-brain", "ai", "knowledge-management", "fastapi", "backend"]

dependencies = [
    # FastAPI核心
    "fastapi[standard]>=0.115.13",
    "uvicorn[standard]>=0.34.3",
    # 数据库相关
    "sqlalchemy[asyncio]>=2.0.41",
    "alembic>=1.16.2",
    "asyncpg>=0.30.0",
    "redis>=6.2.0",
    # 数据验证和序列化
    "pydantic>=2.11.7",
    "pydantic-settings>=2.9.1",
    # AI和机器学习
    "openai>=1.88.0",
    "anthropic>=0.54.0",
    "google-genai>=1.20.0",
    "langchain>=0.3.25",
    "langchain-openai>=0.3.23",
    "langchain-anthropic>=0.3.15",
    "langchain-google-genai>=2.1.5",
    "langgraph>=0.4.8",
    "transformers>=4.52.4",
    "sentence-transformers>=4.1.0",
    # 向量数据库
    "qdrant-client>=1.14.3",
    # 文档处理
    "pdfplumber>=0.11.7",
    "python-docx>=1.2.0",
    "python-pptx>=1.0.2",
    "markdown>=3.5.0",
    "python-multipart>=0.0.20",
    "reportlab>=4.0.0",         # 保留用于PDF生成
    # HTTP客户端和工具
    "httpx>=0.28.1",
    "aiofiles>=24.1.0",
    "python-dotenv>=1.1.0",
    "beautifulsoup4>=4.12.3",
    # 认证和安全
    "python-jose[cryptography]>=3.5.0",
    "passlib[bcrypt]>=1.7.4",
    # 对象存储
    "minio>=7.2.15",
    # 日志
    "structlog>=25.4.0",
]

[project.optional-dependencies]
enhanced = [
    "markitdown[all]>=0.1.0", # Microsoft's document conversion tool
]
academic = [
    # "pdfmathtranslate",  # For academic PDF processing (future)
]

[dependency-groups]
dev = [
    "black>=25.1.0",
    "mypy>=1.16.1",
    "pre-commit>=4.2.0",
    "pytest>=8.4.0",
    "pytest-asyncio>=1.0.0",
    "pytest-cov>=6.2.1",
    "ruff>=0.11.13",
    "aiosqlite>=0.20.0",     # For async SQLite in tests
]

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
addopts = "--cov=app --cov-report=html --cov-report=term-missing"

[tool.black]
line-length = 88
target-version = ["py312"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 88
target-version = "py312"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.12"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = ["qdrant_client.*", "minio.*"]
ignore_missing_imports = true
