{
  "info": {
    "name": "SecondBrain API - 05.端到端完整流程",
    "description": "完整的端到端测试流程，覆盖主要功能的完整使用场景",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{access_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "access_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "refresh_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "space_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "note_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "document_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "conversation_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "message_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "annotation_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "citation_id",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "1. 初始化和认证",
      "item": [
        {
          "name": "健康检查",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/health",
              "host": ["{{baseUrl}}"],
              "path": ["health"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has status\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('status');",
                  "    pm.expect(jsonData.status).to.eql('healthy');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "用户登录",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"username\": \"{{username}}\",\n    \"password\": \"{{password_plain}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login/json",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login", "json"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has tokens\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('access_token');",
                  "    pm.expect(jsonData).to.have.property('refresh_token');",
                  "    ",
                  "    // 保存tokens到集合变量",
                  "    pm.collectionVariables.set(\"access_token\", jsonData.access_token);",
                  "    pm.collectionVariables.set(\"refresh_token\", jsonData.refresh_token);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "获取用户信息",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/me",
              "host": ["{{baseUrl}}"],
              "path": ["users", "me"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has user data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    pm.expect(jsonData).to.have.property('email');",
                  "    pm.expect(jsonData).to.have.property('username');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "2. 知识空间管理",
      "item": [
        {
          "name": "创建知识空间",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"E2E测试空间\",\n    \"description\": \"端到端测试专用空间\",\n    \"is_public\": false\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/spaces/",
              "host": ["{{baseUrl}}"],
              "path": ["spaces", ""]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Response has space data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    pm.expect(jsonData).to.have.property('name');",
                  "    pm.expect(jsonData.name).to.eql('E2E测试空间');",
                  "    ",
                  "    // 保存space_id",
                  "    pm.collectionVariables.set(\"space_id\", jsonData.id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "获取空间列表",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/spaces/",
              "host": ["{{baseUrl}}"],
              "path": ["spaces", ""]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response is array with at least one space\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.be.an('array');",
                  "    pm.expect(jsonData.length).to.be.at.least(1);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "3. 笔记管理",
      "item": [
        {
          "name": "创建笔记",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"E2E测试笔记\",\n    \"content\": \"这是端到端测试创建的笔记内容。\\n\\n## 测试章节\\n- 测试项1\\n- 测试项2\",\n    \"space_id\": \"{{space_id}}\",\n    \"tags\": [\"测试\", \"E2E\"],\n    \"is_public\": false\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/notes/",
              "host": ["{{baseUrl}}"],
              "path": ["notes", ""]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Response has note data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    pm.expect(jsonData).to.have.property('title');",
                  "    pm.expect(jsonData.title).to.eql('E2E测试笔记');",
                  "    ",
                  "    // 保存note_id",
                  "    pm.collectionVariables.set(\"note_id\", jsonData.id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "更新笔记",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"E2E测试笔记(已更新)\",\n    \"content\": \"这是更新后的端到端测试笔记内容。\\n\\n## 测试章节\\n- 测试项1\\n- 测试项2\\n- 新增测试项3\",\n    \"tags\": [\"测试\", \"E2E\", \"更新\"]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/notes/{{note_id}}",
              "host": ["{{baseUrl}}"],
              "path": ["notes", "{{note_id}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Note is updated\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.title).to.eql('E2E测试笔记(已更新)');",
                  "    pm.expect(jsonData.tags).to.include('更新');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "搜索笔记",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"query\": \"E2E测试\",\n    \"space_ids\": [\"{{space_id}}\"],\n    \"limit\": 10\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/notes/search",
              "host": ["{{baseUrl}}"],
              "path": ["notes", "search"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Search returns results\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('results');",
                  "    pm.expect(jsonData.results).to.be.an('array');",
                  "    pm.expect(jsonData.results.length).to.be.at.least(1);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "4. AI对话功能",
      "item": [
        {
          "name": "创建对话",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"E2E测试对话\",\n    \"space_id\": \"{{space_id}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/chat/conversations",
              "host": ["{{baseUrl}}"],
              "path": ["chat", "conversations"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Response has conversation data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    pm.expect(jsonData).to.have.property('title');",
                  "    ",
                  "    // 保存conversation_id",
                  "    pm.collectionVariables.set(\"conversation_id\", jsonData.id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "发送消息",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"content\": \"请帮我总结一下E2E测试的要点\",\n    \"model\": \"gpt-3.5-turbo\",\n    \"stream\": false\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/chat/conversations/{{conversation_id}}/messages",
              "host": ["{{baseUrl}}"],
              "path": ["chat", "conversations", "{{conversation_id}}", "messages"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has message data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    pm.expect(jsonData).to.have.property('content');",
                  "    pm.expect(jsonData).to.have.property('role');",
                  "    ",
                  "    // 保存message_id",
                  "    if (jsonData.id) {",
                  "        pm.collectionVariables.set(\"message_id\", jsonData.id);",
                  "    }",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "5. 清理测试数据",
      "item": [
        {
          "name": "删除笔记",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/notes/{{note_id}}",
              "host": ["{{baseUrl}}"],
              "path": ["notes", "{{note_id}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 204\", function () {",
                  "    pm.response.to.have.status(204);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "删除对话",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/chat/conversations/{{conversation_id}}",
              "host": ["{{baseUrl}}"],
              "path": ["chat", "conversations", "{{conversation_id}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 204\", function () {",
                  "    pm.response.to.have.status(204);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "删除空间",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/spaces/{{space_id}}",
              "host": ["{{baseUrl}}"],
              "path": ["spaces", "{{space_id}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 204\", function () {",
                  "    pm.response.to.have.status(204);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    }
  ]
}